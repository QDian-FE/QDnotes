图解Http协议读书笔记
*** 协议本身 ***
*** 协议配合的web服务器 ***


** 协议本身：
    简单概括：Web网络是建立在http协议基础之上的及--超文本传输协议。前身及进行文本内容的传输

    1、http建立的基础：http本质上是tcp/ip协议内容的一个自己，tcp/ip协议为解决计算机与网络设备
                      之间的通信儿存在。举个例子：客户端硬件，和服务器硬件，不同的构成不同的操
                      系统之间是如何进行通信的呢？需要一种规则的制定，这种规则统称为protocol
                      之后如何进行电缆规则选定，等一系列附加规则的集合就被称之为tcp/ip协议组
    
    2、延展Tcp/Ip协议族：如此多的规则，自然要进行分类记忆管理。实际上分成4层，应用层，传输层，网络层
                        数据链路层
                        我们关注的http协议存在于应用层--例：http协议，ftp协议
                        具体内容(详见p008页)
                        四层应用流程(p010页)
    3、IP、Tcp、DNS: **注意**书中明确指出---IP协议与IP地址的不同
                    IP协议：包含IP地址&MAC地址，这两个基础的支撑了IP协议能够保证数据准确送达。
                    (p011页)
                    不得不说，实际上我们的客户端和服务器之间很少存在'单点' 对应 '单点' 的通信
                    一般情况都是经过转发，类比于快递:  
                    {{淘宝卖家 ---A城快递员收件 --> A城集散中心发送 --> B城集散中心收到 --> B城快递员派送 --> 客户}}   

                    在如此复杂的过程当中，如何保证'货物'安全送达？
                    依赖TCP协议 -- 进行数据分割，确认数据送达
                    借此 引出著名的 '三次握手' (详见p13页)

                    关于DNS -- DNS即域名解析(p14页) 基本操作，如有疑惑百度'域名--IP关系' 

    4、URI 与 URL : 名词解释--URI 用字符串标识某一网络资源，URL 标识资源的地点
                    也就是说 URI 除去资源地址外还附加其他信息内容
                             URL 单纯资源地址信息
                             URL 为 URI 的一个子集。
                             (详见p18页例证)
    5、RFC标准(引子) : HTTP协议的存在也需要一个规范，这个规范就是RFC.
                      世界通用遵循RFC标准保证Web服务器与客户端进行沟通
                      若不遵守--有可能无法通信
                      
                      但是 http协议本身的内容都遵守RFC标准，http协议的扩展
                      实际上就没有遵守RFC协议，但是依然能够使用，例如websocket
                      '可以进行协议扩展，但不能改变协议本身'这句话由此而来
                      (p19页)
    6、http协议基础： 有关请求，相应，这个简单的过程不赘述。
                     几点重要的:
                        1、http无法保存状态
                         日均次一万访问量的服务器，无法记住你是谁。
                         场景：京东页面浏览，无需重复登录
                         实现: cookie引入
                         为了改变http协议无状态这一点，才引入的cookie技术的存在

                        2、告知意图方法的http协议：
                           阐述了http1.0与http1.1两个版本当中各种请求方式
                           重点是长连接以及管线化。
                           (详见p27-p36)
                        
                        3、cookie内容不赘述(p37)完整过程
    7、请求报文：    结构--
                          报文首部 -- 请求行(状态行) 请求(响应)首部字段 通用首部字段 实体首部字段
                          报文主体
    8、实体：       实体首部 + 实体主体 请求或者响应的有效传输项
                   http报文主体 用于传输 请求或者响应实体主体

                   http报文主体 一把等价 实体主体。
                   除去，实体主体进行内容压缩，才会与报文主体主体产生差异
                   压缩、分割等操作字段，详见(p45-51)
    9、状态码:      第四章具体说明，当成字典翻阅即可。
    10、说明：      第六章内容针对http所有应用到的首部字段进行详尽的说明,当成字典翻阅即可



*** 协议配合的web服务器的结构组成***
    1、网关，隧道，代理：
            代理：'中间人'角色，转发客户端到服务器端之间的请求内容，同时也进行相应的接收与返回 会分析报文信息
            网关：会进行报文的分析，拥有资源的服务器一样，针对请求的内容进行完整处理，客户端有时的访问目的地就
                  是这样的'假目的地' 有时能和目标服务器之间采用'非http协议'进行沟通
            隧道: 顾名思义，就是直接建立客户端与服务器之间的联系，隧道本身对http协议不做任何处理，采用ssl手段
                 进行加密也就是我们常说的https协议原型
            **代理:缓存代理--缓存有效期限--客户端缓存(p71-74)
    2、https协议：即采用ssl手段进行内容加密，具体流程详见(p161-166)
                 https章节讲述了其他加密方法以及第三方证书等内容，当故事看即可
    3、用户登录验证：表单验证方式依然是主流，流程详解(p176-178) 其他验证方式当故事看即可
    4、http协议扩展：http创建的目的是为了文本内容传输，然而现在web发展趋势有着更高的要求，http已然无法进行满足
                    进行满足，进行新协议创建并且替换即可解决，但是http协议依然占据主体无法进行更改，因此只能在
                    原有的http协议基础之上进行扩展。但并无法解解决性能等本质问题，由于http协议创建之初存在的
                    限制，我们只能采用其他的扩展方式在尊重协议，履行协议的前提下进行期望功能的实现。
                    因此，协议的拓展，和http协议版本的更新是完全不同的概念。
                    结束协议拓展的可能性，在于http本身版本的更新以及重大的改变。
    5、最后： 第十一章浏览即可
    

    图解Http协议---大体上将协议的由来以及细节囊括在内，前半本当故事读，后半本当字典翻阅即可


                                                        2018/3/31 -- lzq